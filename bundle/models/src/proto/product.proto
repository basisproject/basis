syntax = "proto3";
package basis.product;
import "helpers.proto";
import "google/protobuf/timestamp.proto";
import "cost_tag.proto";

message Product {
	// how this product is measured
	enum Unit {
		UNKNOWN = 0;
		MILLIMETER = 1;
		MILLILITER = 2;
		WATTHOUR = 3;
		// "each" is a special measure meaning that one unit of the product is
		// self-referential. for instance, you might measure apples as "each"
		// such that "apple" is the unit of measure for apples.
		EACH = 4;
	}
	// physical dimensions, if applicable
	message Dimensions {
		double width = 1;
		double height = 2;
		double length = 3;
	}

	string id = 1;
	string company_id = 2;
	string name = 3;
	Unit unit = 4;
	// mass should be defined for liquids and solids, which will help determine
	// shipping rates. obviously mass does not apply to watt hours or other non-
	// physical units.
	double mass_mg = 5;
	Dimensions dimensions = 6;
	repeated basis.cost_tag.CostTagEntry cost_tags = 7;
	bool active = 9;
	string meta = 10;
	google.protobuf.Timestamp created = 11;
	google.protobuf.Timestamp updated = 12;
	google.protobuf.Timestamp deleted = 13;
	uint64 history_len = 14;
	exonum.Hash history_hash = 15;
}

message TxCreate {
	string id = 1;
	string company_id = 2;
	string name = 3;
	Product.Unit unit = 4;
	double mass_mg = 5;
	Product.Dimensions dimensions = 6;
	repeated basis.cost_tag.CostTagEntry cost_tags = 7;
	bool active = 9;
	string meta = 10;
	google.protobuf.Timestamp created = 11;
}

message TxUpdate {
	string id = 1;
	string name = 2;
	Product.Unit unit = 3;
	double mass_mg = 4;
	Product.Dimensions dimensions = 5;
	repeated basis.cost_tag.CostTagEntry cost_tags = 7;
	bool active = 8;
	string meta = 9;
	google.protobuf.Timestamp updated = 10;
}

message TxDelete {
	string id = 1;
	google.protobuf.Timestamp deleted = 3;
}

